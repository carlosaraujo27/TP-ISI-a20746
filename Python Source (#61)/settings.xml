<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <config key="node.script_Internals">
            <entry key="SettingsModelID" type="xstring" value="SMID_string"/>
            <entry key="EnabledStatus" type="xboolean" value="true"/>
        </config>
        <entry key="node.script" type="xstring" value="from icalendar import Calendar%%00010import xml.etree.ElementTree as ET%%00010import os%%00010%%00010def ics_to_xml(ics_file_path, xml_file_path):%%00010    # Ler o arquivo .ics%%00010    with open(ics_file_path, 'r', encoding='utf-8') as ics_file:%%00010        calendar = Calendar.from_ical(ics_file.read())%%00010%%00010    # Criar a raiz do XML%%00010    root = ET.Element(&quot;calendar&quot;)%%00010%%00010    # Percorrer cada componente do calendário%%00010    for component in calendar.walk():%%00010        if component.name == &quot;VEVENT&quot;:%%00010            event = ET.SubElement(root, &quot;event&quot;)%%00010            %%00010            # Extrair campos do evento e adicionar ao XML%%00010            summary = component.get('SUMMARY', 'Sem título')%%00010            dtstart = component.get('DTSTART').dt.isoformat() if component.get('DTSTART') else ''%%00010            dtend = component.get('DTEND').dt.isoformat() if component.get('DTEND') else ''%%00010            dtstamp = component.get('DTSTAMP').dt.isoformat() if component.get('DTSTAMP') else ''%%00010            uid = component.get('UID', '')%%00010            sequence = component.get('SEQUENCE', '0')%%00010            created = component.get('CREATED').dt.isoformat() if component.get('CREATED') else ''%%00010            last_modified = component.get('LAST-MODIFIED').dt.isoformat() if component.get('LAST-MODIFIED') else ''%%00010            location = component.get('LOCATION', '')%%00010            status = component.get('STATUS', 'confirmed')%%00010            transp = component.get('TRANSP', 'OPAQUE')%%00010%%00010            # Adicionar elementos ao evento no XML%%00010            ET.SubElement(event, &quot;summary&quot;).text = summary%%00010            ET.SubElement(event, &quot;dtstart&quot;).text = dtstart%%00010            ET.SubElement(event, &quot;dtend&quot;).text = dtend%%00010            ET.SubElement(event, &quot;dtstamp&quot;).text = dtstamp%%00010            ET.SubElement(event, &quot;uid&quot;).text = uid%%00010            ET.SubElement(event, &quot;sequence&quot;).text = sequence%%00010            ET.SubElement(event, &quot;created&quot;).text = created%%00010            ET.SubElement(event, &quot;lastModified&quot;).text = last_modified%%00010            ET.SubElement(event, &quot;location&quot;).text = location%%00010            ET.SubElement(event, &quot;status&quot;).text = status%%00010            ET.SubElement(event, &quot;transp&quot;).text = transp%%00010%%00010    # Converter a árvore XML para string e salvar no ficheiro .xml%%00010    tree = ET.ElementTree(root)%%00010    tree.write(xml_file_path, encoding=&quot;utf-8&quot;, xml_declaration=True)%%00010%%00010    print(f&quot;Ficheiro XML criado com sucesso em {xml_file_path}&quot;)%%00010%%00010# Caminhos para os ficheiros de entrada e saída%%00010ics_file_path = &quot;meu_calendario_google.ics&quot;%%00010xml_file_path = &quot;meu_calendario_google.xml&quot;%%00010%%00010# Executar a conversão%%00010ics_to_xml(ics_file_path, xml_file_path)%%00010"/>
        <config key="node.template_Internals">
            <entry key="SettingsModelID" type="xstring" value="SMID_string"/>
            <entry key="EnabledStatus" type="xboolean" value="true"/>
        </config>
        <entry key="node.template" type="xstring" value=""/>
        <config key="open.in_Internals">
            <entry key="SettingsModelID" type="xstring" value="SMID_boolean"/>
            <entry key="EnabledStatus" type="xboolean" value="true"/>
        </config>
        <entry key="open.in" type="xboolean" value="false"/>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="CONFIGURED"/>
    <entry key="factory" type="xstring" value="de.mpicbg.knime.scripting.python.v2.node.source.PythonSourceV2NodeFactory"/>
    <entry key="node-name" type="xstring" value="Python Source"/>
    <entry key="node-bundle-name" type="xstring" value="Python Scripting Integration for KNIME"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="de.mpicbg.knime.scripting.python"/>
    <entry key="node-bundle-vendor" type="xstring" value="Max Planck Institute of Molecular Cell Biology and Genetics (MPI-CBG)"/>
    <entry key="node-bundle-version" type="xstring" value="5.0.0.v202407011112"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Python Scripting extension"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="de.mpicbg.tds.knime.scripting.python.feature.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="Max Planck Institute of Molecular Cell Biology and Genetics (MPI-CBG), Dresden, Germany"/>
    <entry key="node-feature-version" type="xstring" value="5.3.0.v202407011112"/>
    <config key="factory_settings"/>
    <entry key="name" type="xstring" value="Python Source"/>
    <entry key="hasContent" type="xboolean" value="false"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" isnull="true" value=""/>
    </config>
</config>
